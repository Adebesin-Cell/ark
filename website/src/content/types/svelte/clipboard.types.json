{
  "Context": { "props": { "render": { "type": "Snippet<[UseClipboardContext]>", "isRequired": false } } },
  "Control": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'div'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "ref": { "type": "Element", "isRequired": false }
    }
  },
  "Indicator": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'div'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "copied": { "type": "Snippet<[]>", "isRequired": false },
      "ref": { "type": "Element", "isRequired": false }
    }
  },
  "Input": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'input'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "ref": { "type": "Element", "isRequired": false }
    }
  },
  "Label": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'label'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "ref": { "type": "Element", "isRequired": false }
    }
  },
  "Root": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'div'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "defaultValue": {
        "type": "string",
        "isRequired": false,
        "description": "The initial value to be copied to the clipboard when rendered.\nUse when you don't need to control the value of the clipboard."
      },
      "id": { "type": "string", "isRequired": false, "description": "The unique identifier of the machine." },
      "ids": {
        "type": "Partial<{ root: string; input: string; label: string }>",
        "isRequired": false,
        "description": "The ids of the elements in the clipboard. Useful for composition."
      },
      "onStatusChange": {
        "type": "(details: CopyStatusDetails) => void",
        "isRequired": false,
        "description": "The function to be called when the value is copied to the clipboard"
      },
      "onValueChange": {
        "type": "(details: ValueChangeDetails) => void",
        "isRequired": false,
        "description": "The function to be called when the value changes"
      },
      "ref": { "type": "Element", "isRequired": false },
      "timeout": {
        "type": "number",
        "defaultValue": "3000",
        "isRequired": false,
        "description": "The timeout for the copy operation"
      },
      "value": { "type": "string", "isRequired": false, "description": "The controlled value of the clipboard" }
    }
  },
  "RootProvider": {
    "props": {
      "value": { "type": "UseClipboardReturn", "isRequired": true },
      "asChild": {
        "type": "Snippet<[PropsFn<'div'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "ref": { "type": "Element", "isRequired": false }
    }
  },
  "Trigger": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'button'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "ref": { "type": "Element", "isRequired": false }
    }
  },
  "ValueText": {
    "props": {
      "asChild": {
        "type": "Snippet<[PropsFn<'span'>]>",
        "isRequired": false,
        "description": "Use the provided child element as the default rendered element, combining their props and behavior."
      },
      "ref": { "type": "Element", "isRequired": false }
    }
  }
}
